{"ast":null,"code":"var _jsxFileName = \"/Users/zcalvert/dev/cards/client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport TextField from \"@material-ui/core/TextField\";\nimport './App.css';\nconst socket = io.connect('http://localhost:5000/game');\n\nfunction App() {\n  const [state, setState] = useState({\n    room: 'default',\n    message: '',\n    name: ''\n  });\n  const [chat, setChat] = useState([]);\n  useEffect(() => {\n    const {\n      room,\n      name,\n      message\n    } = state;\n    socket.emit('join', {\n      room,\n      name\n    });\n  });\n  useEffect(() => {\n    socket.on('message', ({\n      room,\n      name,\n      message\n    }) => {\n      setChat([...chat, {\n        room,\n        name,\n        message\n      }]);\n    });\n  });\n\n  const onTextChange = e => {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onMessageSubmit = e => {\n    e.preventDefault();\n    const {\n      room,\n      name,\n      message\n    } = state;\n    socket.emit('message', {\n      room,\n      name,\n      message\n    });\n    setState({\n      room,\n      message: '',\n      name\n    });\n  };\n\n  const renderChat = () => {\n    return chat.map(({\n      name,\n      message\n    }, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, name, \": \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }\n    }, message))));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onMessageSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Messenger\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"name\",\n    onChange: e => onTextChange(e),\n    value: state.name,\n    label: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-multiline-static\",\n    name: \"message\",\n    label: \"Message\",\n    variant: \"outlined\",\n    onChange: e => onTextChange(e),\n    value: state.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Send Message\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"render-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Chat Log\"), renderChat()));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zcalvert/dev/cards/client/src/App.js"],"names":["React","useState","useEffect","io","TextField","socket","connect","App","state","setState","room","message","name","chat","setChat","emit","on","onTextChange","e","target","value","onMessageSubmit","preventDefault","renderChat","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport TextField from \"@material-ui/core/TextField\";\nimport './App.css';\n\nconst socket = io.connect('http://localhost:5000/game');\n\nfunction App() {\n  const [state, setState] = useState({ room: 'default', message: '', name: '' });\n  const [chat, setChat] = useState([]);\n\n  useEffect(() => {\n    const { room, name, message } = state;\n    socket.emit('join', { room, name });\n  });\n\n  useEffect(() => {\n    socket.on('message', ({ room, name, message }) => {\n      setChat([...chat, { room, name, message }]);\n    });\n  });\n\n  const onTextChange = e => {\n    setState({ ...state, [e.target.name]: e.target.value });\n  };\n\n  const onMessageSubmit = (e) => {\n    e.preventDefault();\n    const { room, name, message } = state;\n    socket.emit('message', { room, name, message });\n    setState({room, message: '', name })\n  };\n\n  const renderChat = () => {\n    return chat.map(({ name, message }, index) => (\n      <div key={index}>\n        <h3>\n          {name}: <span>{message}</span>\n        </h3>\n      </div>\n    ))\n  };\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={onMessageSubmit}>\n        <h1>Messenger</h1>\n        <div className=\"name-field\">\n          <TextField\n              name=\"name\"\n              onChange={e => onTextChange(e)} value={state.name} label='Name' />\n        </div>\n        <div>\n          <TextField\n            id='outlined-multiline-static'\n            name='message'\n            label='Message'\n            variant='outlined'\n            onChange={e => onTextChange(e)}\n            value={state.message}\n          />\n        </div>\n        <button type='submit'>Send Message</button>\n      </form>\n      <div className=\"render-chat\">\n        <h1>Chat Log</h1>\n        {renderChat()}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}